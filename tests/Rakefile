require "parallel"
require "thread_safe"
require "securerandom"

RUBY_SRC = "ruby-src"
RUBY_DIR = "ruby-src-macroize"
RUBY_FAIL_LOG = "ruby-failure.log"

N = 8 # TODO Asking the system ncpus

RUBY_OPT = "-X _I.ext/include/x86_64-linux _I./include _I. --with-cpp=gcc --fake-include=ruby_fake_include.h"

desc "test with ruby source tree"
task "ruby" do
  dir = "ruby-src"
  sh "git clone https://github.com/ruby/ruby #{RUBY_SRC}" unless File.directory? dir
  sh "rm -rf #{RUBY_DIR}" if File.directory? RUBY_DIR
  sh "cp -r #{RUBY_SRC} #{RUBY_DIR}"

  Dir.chdir(RUBY_DIR) do
    sh "autoconf && ./configure"
    sh "make id.h"
    sh "make probes.h"

    cfiles = []
    Dir.glob("./**/*.c") do |f|
      cfiles << f
    end

    success_list = ThreadSafe::Array.new
    failure_list = ThreadSafe::Array.new
    Parallel.each(cfiles, in_threads: N) do |f|
      # Looked at the Makefile
      tmpfile = "/tmp/#{SecureRandom.random_number(10**32)}.c"
      `macro-of-inline #{f} #{RUBY_OPT} -o #{tmpfile}`
      e = $?.exitstatus
      if e == 0
        success_list << f
        `cp #{tmpfile} #{f}`
      else
        failure_list << f
        puts "[macroize] failed: #{f}"
      end
      `rm -r #{tmpfile}`
    end

    perc = success_list.size.to_f / (success_list.size + failure_list.size)
    File.open("../ruby-info.log", "w") do |f|
      f.write """\
success: #{perc}%
"""
    end

    File.open("../#{RUBY_FAIL_LOG}", "w") do |f|
      f.write """\
#{failure_list.join("\n")}
  """
    end

    sh "./configure && make -j #{N} && make test"
  end
end

failures = []
if File.exists? RUBY_FAIL_LOG
  File.open(RUBY_FAIL_LOG).each do |line|
    failures << line.chomp
  end
end

Dir.chdir(RUBY_DIR) do
  testno = 0
  Dir.glob("./**/*.c") do |f|
    fail_mark = (failures.include? f) ? "[fail]" : ""
    testno += 1
    desc "#{fail_mark} (#{f})"
    task "ruby#{testno}" do
      Dir.chdir(RUBY_DIR) do
        sh "cp #{File.join("../#{RUBY_SRC}", f)} #{f}"
        sh "macro-of-inline #{f} #{RUBY_OPT} --record ../record-macro-of-inline"
      end
    end
  end
end if File.directory? RUBY_DIR
